variables:
  - name: chart
    value: seeker-injector
  - name: pool
    value: on-prem
  - name: HELM_EXPERIMENTAL_OCI
    value: 1

trigger:
  tags:
    include:
    - "v*"
  paths:
    include:
    - charts/*

stages:
- stage: buildHelmPackage
  pool:
    name: ${{ variables.pool }}
  jobs:
  - job: buildPackage 
    steps:
    - bash: echo "##vso[task.setvariable variable=version]$(grep -m 1 'version' "$(System.DefaultWorkingDirectory)/charts/$(chart)/Chart.yaml" | cut -d ' ' -f2 | tr -d '\n')"
      displayName: 'getChartVersion'
      #workingDirectory: charts/seeker-injector/
    - bash: helm package charts/$(chart) -d $(System.DefaultWorkingDirectory) -u
      displayName: 'packageHelmChart'
      #workingDirectory: charts/seeker-injector/
    - publish: $(System.DefaultWorkingDirectory)/$(chart)-$(version).tgz
      artifact: seeker-injector

- stage: pushHelmPackageAcr
  pool:
    name: Azure Pipelines
    vmImage: 'ubuntu-20.04'
  jobs:
  - job: pushChartAcr
    steps:
    - task: HelmInstaller@0
      displayName: 'Install Helm 3.7.0'
      inputs:
        helmVersion: 3.7.0
    - download: current
      artifact: $(chart)
    - bash: helm package -u charts/$(chart) -d $(chart).tgz
    - bash: helm push $(chart) drfostercontainerreg.azurecr.io/helm

- stage: pushHelmPackage
  pool:
    name: ${{ variables.pool }}
  jobs:
  - job: pushPackage
    steps:
    - download: current
      artifact: $(chart)
    - bash: for p in $(System.DefaultWorkingDirectory)/../$(chart)/*.tgz; do helm push $p https://helm.dr-foster.lan --insecure ; done
      displayName: 'pushPackage'
    - bash: rm -rf $(System.DefaultWorkingDirectory)/../$(chart)
      displayName: 'clearPackages'