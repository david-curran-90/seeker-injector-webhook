parameters:
- name: chart
  displayName: Chart name
  type: string
  default: seeker-injector
- name: pool
  displayName: Build Pool
  type: string
  default: 'on-prem'

trigger:
  branches:
    include:
    - dev
    - main
  paths:
    include:
    - charts/*

stages:
- stage: buildHelmPackage
  pool:
    name: ${{ parameters.pool }}
  jobs:
  - job: buildPackage 
    steps:
    - bash: echo "##vso[task.setvariable variable=version]$(grep -m 1 'version' "$(System.DefaultWorkingDirectory)/charts/$(parameters.chart)/Chart.yaml" | cut -d ' ' -f2 | tr -d '\n')"
      displayName: 'getChartVersion'
      #workingDirectory: charts/seeker-injector/
    - bash: helm package charts/$(parameters.chart) -d $(System.DefaultWorkingDirectory) -u
      displayName: 'packageHelmChart'
      #workingDirectory: charts/seeker-injector/
    - publish: $(System.DefaultWorkingDirectory)/$(parameters.chart)-$(version).tgz
      artifact: seeker-injector

- stage: pushHelmPackage
  pool:
    name: ${{ parameters.pool }}
  jobs:
  - job: pushPackage
    steps:
    - download: current
      artifact: $(chart)
    - bash: for p in $(System.DefaultWorkingDirectory)/../$(chart)/*.tgz; do helm push $p https://helm.dr-foster.lan --insecure ; done
      displayName: 'pushPackage'
    - bash: rm -rf $(System.DefaultWorkingDirectory)/../$(chart)
      displayName: 'clearPackages'